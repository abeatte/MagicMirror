/* Config Template
 *
 * For more information on how you can configure this file
 * see https://docs.magicmirror.builders/configuration/introduction.html
 * and https://docs.magicmirror.builders/modules/configuration.html
 *
 * You can use environment variables using a `config.js.template` file instead of `config.js`
 * which will be converted to `config.js` while starting. For more information
 * see https://docs.magicmirror.builders/configuration/introduction.html#enviromnent-variables
 */
let config = {
	address: "0.0.0.0",	// Address to listen on, can be:
							// - "localhost", "127.0.0.1", "::1" to listen on loopback interface
							// - another specific IPv4/6 to listen on a specific interface
							// - "0.0.0.0", "::" to listen on any interface
							// Default, when address config is left out or empty, is "localhost"
	port: 8081,
	basePath: "/",	// The URL path where MagicMirrorÂ² is hosted. If you are using a Reverse proxy
									// you must set the sub path here. basePath must end with a /
	ipWhitelist: [], // ["127.0.0.1", "::ffff:127.0.0.1", "::1"],	// Set [] to allow all IP addresses
									// or add a specific IPv4 of 192.168.1.5 :
									// ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.1.5"],
									// or IPv4 range of 192.168.3.0 --> 192.168.3.15 use CIDR format :
									// ["127.0.0.1", "::ffff:127.0.0.1", "::1", "::ffff:192.168.3.0/28"],

	useHttps: false,			// Support HTTPS or not, default "false" will use HTTP
	httpsPrivateKey: "",	// HTTPS private key path, only require when useHttps is true
	httpsCertificate: "",	// HTTPS Certificate path, only require when useHttps is true

	language: "en",
	locale: "en-US",
	logLevel: ["INFO", "LOG", "WARN", "ERROR"], // Add "DEBUG" for even more logging
	timeFormat: 24,
	units: "imperial",

	modules: [
		{
			module: "clock",
			position: "top_left"
		},
		{
			module: "MMM-CalendarExt3",
			// header: "The Family Schedule",
			position: "bottom_bar",
			config: {
				waitFetch: 60000, // once per minute
				refreshInterval: 60000, // once per minute
				displayWeatherTemp: true,
				useSymbol: true,
				useWeather: true,
				maxEventLines: 4,
				// calendarSet: ["cal1", "cal2", "cal3"]
				},		
		},
		{
			module: "calendar",
			// position: "top_left",
			config: {
				broadcastPastEvents: true,
				fetchInterval:60*1000,
				maximumNumberOfDays: 28,
				calendars: [
					{
						symbol: "soccer-ball",
						color: "blue",
						name: "cal1",
						url: "<URL>"
					},
					{
						symbol: "soccer-ball",
						color: "pink",
						name: "cal2",
						url: "<URL>"
					},
					{
						symbol: "soccer-ball",
						color: "red",
						name: "cal3",
						url: "<URL>"
					},
					{
						symbol: "children",
						color: "orange",
						name: "cal4",
						url: "<URL>"
					},
					{
					 	symbol: "flag-usa",
						color: "red",
						name: "us holidays",
						// url: "https://www.calendarlabs.com/ical-calendar/ics/76/US_Holidays.ics"
						// url: "webcal://www.calendarlabs.com/ical-calendar/ics/76/US_Holidays.ics"
						url: "https://calendar.google.com/calendar/embed?src=en.usa%23holiday%40group.v.calendar.google.com&ctz=America%2FLos_Angeles"
					},
					]
			}
		},
		{
			module: "weather",
			position: "top_right",
			config: {
				weatherProvider: "openmeteo",
				type: "current",
				lat: <LAT>,
				lon: <LONG>
			}
		},
		{
			module: "weather",
			//position: "null",
			header: "Weather Forecast",
			config: {
				weatherProvider: "openmeteo",
				type: "forecast",
				lat: <LAT>,
				lon: <LONG>,
				maxNumberOfDays: 14
			}
		},
	]
};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") { module.exports = config; }
